<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fitness.dao.CourseMapper">

    <resultMap id="baseMap" type="com.fitness.entity.Course">
        <association property="member" javaType="com.fitness.entity.Member">
            <id property="memberId" column="member_id"/>
            <result property="name" column="name"/>
            <result property="sex" column="sex"/>
            <result property="birthday" column="birthday"/>
            <result property="telNumber" column="tel_number"/>
            <result property="registTime" column="regist_time"/>
            <result property="address" column="address"/>
        </association>
        <association property="coach" javaType="com.fitness.entity.Coach">
            <id column="coach_id" property="coachId"/>
            <result column="coach_name" property="coachName"/>
            <result column="coach_sex" property="coachSex"/>
            <result column="coach_birth" property="coachBirth"/>
            <result column="coach_tel" property="coachTel"/>
            <result column="entry_time" property="entryTime"/>
            <result column="coach_type" property="coachType"/>
            <result column="coach_level" property="coachLevel"/>
        </association>
        <association property="courseInfo" javaType="com.fitness.entity.CourseInfo">
            <id property="courseId" column="course_id"/>
            <result property="courseName" column="course_name"></result>
            <result property="description" column="description"></result>
            <result property="startTime" column="start_time"></result>
            <result property="frequency" column="frequency"></result>
            <result property="price" column="price"></result>
        </association>
    </resultMap>

    <!--基础查询信息-->
    <sql id="baseQuery">
        select member.member_id      as member_id,
               name,
               sex,
               birthday,
               tel_number,
               regist_time,
               address,
               coach.coach_id        as coach_id,
               coach_name,
               coach_sex,
               coach_birth,
               coach_tel,
               entry_time,
               coach_type,
               coach_level,
               course_info.course_id as course_id,
               course_name,
               description,
               start_time,
               frequency,
               price
        from course,
             member,
             coach,
             course_info
        where course.member_id = member.member_id
          and course.coach_id
            = coach.coach_id
          and course.course_id = course_info.course_id
    </sql>

    <!--1. 获取所有选课信息 会员-教练-课程信息-->
    <select id="getAllCourse" resultMap="baseMap">
        <include refid="baseQuery"/>
    </select>

    <!--2. 根据会员id获取该会员的选课信息-->
    <select id="getCourseByMemberId" resultMap="baseMap">
        <include refid="baseQuery"/>
        and course.member_id = #{memberId}
    </select>

    <!--3. 根据会员名字获取会员的选课信息-->
    <select id="getCourseByMemberName" resultMap="baseMap">
        <include refid="baseQuery"/>
        and name = #{memberName}
    </select>

    <!--4. 根据教练id获取教练所教课程信息-->
    <select id="getCourseByCoachId" resultMap="baseMap">
        <include refid="baseQuery"/>
        and course.coach_id = #{coachId}
    </select>

    <!--5. 根据教练名字获取教练所教授课程-->
    <select id="getCourseByCoachName" resultMap="baseMap">
        <include refid="baseQuery"/>
        and coach_name = #{coachName}
    </select>

    <!--6. 新增课选-->
    <insert id="insertCourse">
        insert into course (coach_id, member_id, course_id)
        values (#{coach.coachId}, #{member.memberId}, #{courseInfo.courseId})
    </insert>

    <!--7. 更新课选-->
    <update id="updateCourse">
        update course
        set coach_id  = #{coach.coachId},
            course_id = #{courseInfo.courseId}
        where member_id = #{member.memberId}
    </update>

    <!--8. 删除课选-->
    <delete id="deleteCourse">
        delete
        from course
        where member_id = #{memberId}
    </delete>

    <!--9. 根据会员id获取所选课程信息-->
    <select id="getMemberCourseNumber" resultType="java.lang.Integer">
        select count(*)
        from course
        where member_id = #{memberId}
    </select>

    <!--10. 根据教练id获取所教授课程-->
    <select id="getCoachCourseNumber" resultType="java.lang.Integer">
        select count(*)
        from course
        where coach_id = #{coachId}
    </select>

    <!--11. 根据课程信息id获取该课程被选数量-->
    <select id="getCourseInfoNumber" resultType="java.lang.Integer">
        select count(*)
        from course
        where course_id = #{courseId}
    </select>

    <!--12. 模糊查询-->
    <select id="getCourseByVague" resultMap="baseMap">
        <include refid="baseQuery"/>
        and (
        course.member_id like concat('%', #{keyword}, '%') or
        name like concat('%', #{keyword}, '%') or
        course.coach_id like concat('%', #{keyword}, '%') or
        coach_name like concat('%', #{keyword}, '%')
        )
    </select>
</mapper>