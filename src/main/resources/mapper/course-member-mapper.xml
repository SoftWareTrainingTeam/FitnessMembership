<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fitness.dao.CourseMemberMapper">

    <resultMap id="course_member" type="CourseMember">
        <association property="member" javaType="Member">
            <id property="memberId" column="member_id"/>
            <result property="name" column="name"/>
        </association>
        <association property="courseInfo" javaType="CourseInfo">
            <id property="courseId" column="course_id"/>
            <result property="courseName" column="course_name"/>
        </association>
    </resultMap>

    <select id="getAllCourseMember" resultMap="course_member">
        select course_info.course_id, course_name, member.member_id, member.name
        from course_info,
             course_member,
             member
        where course_info.course_id = course_member.course_id
          and course_member.member_id = member.member_id
    </select>

    <select id="selectByMember" resultMap="course_member">
        select course_info.course_id, course_name, member.member_id, member.name
        from course_info,
             course_member,
             member
        where course_info.course_id = course_member.course_id
          and course_member.member_id = member.member_id
          and (member.member_id LIKE ('%',#{memberKey},'%') or member.name LIKE ('%',#{memberKey},'%'))
    </select>

    <select id="selectByCourse" resultMap="course_member">
        select course_info.course_id, course_name, member.member_id, member.name
        from course_info,
             course_member,
             member
        where course_info.course_id = course_member.course_id
          and course_member.member_id = member.member_id
          and (course_info.course_id LIKE ('%',#{courseKey},'%') or course_name LIKE ('%',#{courseKey},'%'))
    </select>


    <!--这里的参数就不是对象了，因为对象的属性都是引用-->
    <insert id="insertCourseMember">
        insert into course_member(course_id,member_id)
        values (#{courseId},#{memberId})
    </insert>

    <delete id="deleteCourseMember">
        delete from course_member where course_id = #{courseId} and member_id = #{memberId}
    </delete>
</mapper>