<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--1.开启Spring ioc 自动扫描注解包  只对mvc的包做扫描  -->
    <context:component-scan base-package="com.fitness.controller"/>

    <!--2. 开启注解，对jackson数据支持 -->
    <mvc:annotation-driven/>

    <!--3. 放行所有的静态资源-->
    <mvc:default-servlet-handler/>

    <!--    4. 下面的都是配置字符返回编码的-->

    <bean id="utf8Charset" class="java.nio.charset.Charset"
          factory-method="forName">
        <constructor-arg value="UTF-8"/>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg ref="utf8Charset"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--springmvc拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截所有的路径-->
            <mvc:mapping path="/**"/>
            <bean class="com.fitness.interceptor.CorsInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!--不拦截登录-->
            <mvc:exclude-mapping path="/api/login"/>
            <!--不拦截获取验证码-->
            <mvc:exclude-mapping path="/api/captcha"/>
<!--            &lt;!&ndash;不拦截courseinfo&ndash;&gt;
            <mvc:exclude-mapping path="/api/courseinfo/**"/>
            &lt;!&ndash;不拦截member&ndash;&gt;
            <mvc:exclude-mapping path="/api/member/**"/>
            &lt;!&ndash;不拦截coach&ndash;&gt;
            <mvc:exclude-mapping path="/api/coach/**"/>
            &lt;!&ndash;不拦截course&ndash;&gt;
            <mvc:exclude-mapping path="/api/course/**"/>-->
            <!--不拦截/-->
            <mvc:exclude-mapping path="/"/>
            <bean class="com.fitness.interceptor.TokenInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--    配置thymeleaf-->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/"/>
        <property name="suffix" value=".html"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="order" value="1"/>
        <property name="templateMode" value="HTML5"/>
        <property name="cacheable" value="false"/>
    </bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!--    感觉控制器多了，就把index的写过来
    这里报错不用管它，thymeleaf会处理的-->
    <mvc:view-controller path="/" view-name="index"/>

    <!--    开启mvc的注解驱动-->
    <mvc:annotation-driven/>

<!--    配置异常处理类-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--键表示处理器方法执行过程中出现的异常
                值表示返回的视图，跳转到指定页面-->
                <prop key="java.lang.NullPointerException">error</prop>
                <prop key="java.sql.SQLIntegrityConstraintViolationException">error</prop>
            </props>
        </property>
<!--        将异常信息共享在请求域中-->
        <property name="exceptionAttribute" value="exceptionInfo"/>
    </bean>
</beans>